name: pr-workflow

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - development

jobs:
  # Build and new deploy based on latest release of MIE
  build-content-localization-dev-us-west-2:
    runs-on: ubuntu-latest
    steps:
      - name: Check out pr branch
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.sha }}

      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Generate short sha
        run: |
          echo "SHORT_SHA=`git rev-parse --short HEAD`" >> $GITHUB_ENV

      - name: Run build script
        run: |
          cd deployment
          CONTENT_LOCALIZATION_STACK_NAME="pr${SHORT_SHA}"
          EMAIL=micontentlocalization@gmail.com
          REGION=us-west-2
          VERSION="pr-${SHORT_SHA}"
          DIST_OUTPUT_BUCKET=micl-dev
          TEMPLATE_OUTPUT_BUCKET=$DIST_OUTPUT_BUCKET-$REGION
          ./build.sh $DIST_OUTPUT_BUCKET-$REGION $VERSION $REGION
          echo "read in the template"
          read -r TEMPLATE < ../src/templateUrlMieRelease.txt

      - name: 'Upload One-click Deployment Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: templateUrlMieRelease
          path: src/templateUrlMieRelease.txt
          retention-days: 3
      - name: 'Upload Developer Deployment Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: templateUrlMieDevelopment
          path: src/templateUrlMieDevelopment.txt
          retention-days: 3

  scan-3rd-party-data-us-west-2:
    needs: build-content-localization-dev-us-west-2
    runs-on: ubuntu-latest
    env:
      MIE_REGION: 'us-west-2'
    steps:
      - name: Check out pr branch
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.sha }}

      - name: Initialize test AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
            aws-region: us-west-2

      # FIXME - need to identify what to scan for here - new entries in packages, 
      # python dependencies, other copyrighted code ...
      - name: Get stack name
        run: |
          echo "CONTENT_LOCALIZATION_STACK_NAME=pr`git rev-parse --short HEAD`" >> $GITHUB_ENV

      - name: Scan for new third party packages
        run: |
          echo "TBD - scan for new 3rd party pacakges"
      
      # FIXME - need to identify what to scan for here - is Trufflehog enough?
      - name: Scan for sensitive data
        run: |
          echo "TBD - Scan for sensitive data"
      
      # FIXME - need to make sure this is working properly
      # scan for various types of keys and tokens
      - name: Trufflehog Scan
        uses: edplato/trufflehog-actions-scan@master
        with:
          scanArguments: '--regex --entropy=False'   

  scan-us-west-2:
    needs: build-content-localization-dev-us-west-2
    runs-on: ubuntu-latest
    env:
      MIE_REGION: 'us-west-2'
    steps:
      - name: Check out pr branch
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.sha }}

      - name: Initialize test AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
            aws-region: us-west-2

      - name: Generate short sha
        run: |
          echo "CONTENT_LOCALIZATION_STACK_NAME=pr`git rev-parse --short HEAD`" >> $GITHUB_ENV

      - name: Run cfn_nag
        uses: stelligent/cfn_nag@master
        continue-on-error: true
        with:
            input_path: deployment
  
      # FIXME - This is not working.  Need to test more
      # check it with Hawkeye
      # - name: Hawkeye Scanner
      #   uses: ./.github/actions/hawkeye-scan
  
  

  test-content-localization-dev-us-west-2:
    needs: build-content-localization-dev-us-west-2
    runs-on: ubuntu-latest
    env:
      MIE_REGION: 'us-west-2'
    steps:
      - name: Check out pr branch
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.sha }}

      # FIXME - need unit tests
      #
      # - name: Run unit tests
      #   run: |
      #     cd $GITHUB_WORKSPACE
      #     cd test/unit
      #     ./run_unit.sh workflowapi
      #     ./run_unit.sh dataplaneapi

