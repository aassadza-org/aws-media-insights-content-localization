name: pr-workflow

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - development

jobs:
  # Build and new deploy based on latest release of MIE
  build-us-west-2:
    runs-on: ubuntu-latest
    steps:
      - name: Check out pr branch
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.sha }}

      - name: Initialize AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Generate short sha
        run: |
          echo "SHORT_SHA=`git rev-parse --short HEAD`" >> $GITHUB_ENV

      - name: Run build script
        run: |
          cd deployment
          CONTENT_LOCALIZATION_STACK_NAME="pr${SHORT_SHA}"
          EMAIL=micontentlocalization@gmail.com
          REGION=us-west-2
          VERSION="pr-${SHORT_SHA}"
          DIST_OUTPUT_BUCKET=micl-dev
          TEMPLATE_OUTPUT_BUCKET=$DIST_OUTPUT_BUCKET-$REGION
          ./build.sh $DIST_OUTPUT_BUCKET-$REGION $VERSION $REGION
          echo "read in the template"
          read -r TEMPLATE < ../src/templateUrlMieRelease.txt
          echo "deploy cloudformation: 'aws cloudformation create-stack --stack-name $CONTENT_LOCALIZATION_STACK_NAME --template-url $TEMPLATE --region $REGION --parameters ParameterKey=AdminEmail,ParameterValue=$EMAIL ParameterKey=ElasticSearchNodeSize,ParameterValue=t2.small.elasticsearch --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND --disable-rollback'"
          aws cloudformation create-stack --stack-name $CONTENT_LOCALIZATION_STACK_NAME --template-url $TEMPLATE --region $REGION --parameters ParameterKey=AdminEmail,ParameterValue=$EMAIL ParameterKey=ElasticSearchNodeSize,ParameterValue=t2.small.elasticsearch --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND --disable-rollback
          echo "wait for deploy to complete
          if [[ $? -eq 0 ]]; then
            # Wait for create-stack to finish
            echo  "Waiting for create-stack command to complete"
            CREATE_STACK_STATUS=$(aws --region ${AWS_REGION} cloudformation describe-stacks --stack-name ${STACK_NAME} --query 'Stacks[0].StackStatus' --output text)
            WAIT_TIME=0
                # Timeout check - 15 min
                if [[ $WAIT_TIME -ge 900 ]]; then
                    echo "Deployment timed out after $WAIT_TIME seconds"
                    exit 1
                fi
                WAIT_TIME=$WAIT_TIME+30
                echo "WAIT_TIME = $WAIT_TIME"
                # Wait 30 seconds and then check stack status again
                sleep 30
                CREATE_STACK_STATUS=$(aws --region ${AWS_REGION} --profile ${AWS_PROFILE} cloudformation describe-stacks --stack-name ${STACK_NAME} --query 'Stacks[0].StackStatus' --output text)
                echo "CREATE_STACK_STATUS is $CREATE_STACK_STATUS"
          fi
          echo "check the status of the deployment"


      - name: Wait for deploy to complete before progressing
        uses: jakejarvis/wait-action@master
        with:
          time: '15m'

  test-us-west-2:
    needs: build-us-west-2
    runs-on: ubuntu-latest
    env:
      MIE_REGION: 'us-west-2'
    steps:
      - name: Check out pr branch
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.sha }}

      - name: Initialize test AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
            aws-region: us-west-2

      - name: Generate short sha
        run: |
          echo "CONTENT_LOCALIZATION_STACK_NAME=pr`git rev-parse --short HEAD`" >> $GITHUB_ENV

      - name: Run cfn_nag
        uses: stelligent/cfn_nag@master
        continue-on-error: true
        with:
            input_path: deployment

      # - name: Run unit tests
      #   run: |
      #     cd $GITHUB_WORKSPACE
      #     cd test/unit
      #     ./run_unit.sh workflowapi
      #     ./run_unit.sh dataplaneapi

      # - name: Run integ tests
      #   run: |
      #     cd $GITHUB_WORKSPACE
      #     cd test/integ
      #     ./run_integ.sh

      - name: Initialize build AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Delete stack
        run: |
          aws cloudformation delete-stack --stack-name $CONTENT_LOCALIZATION_STACK_NAME
